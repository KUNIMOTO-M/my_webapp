version: 2
jobs:
  build:
    docker:
      - image: circleci/ruby:2.7.0-node-browsers
        environment:
          - BUNDLER_VERSION: 2.0.2
          - RAILS_ENV: 'test'
      - image: circleci/mysql:5.7
        environment:
          - MYSQL_ALLOW_EMPTY_PASSWORD: 'true'
          - MYSQL_ROOT_HOST: '%'
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            - v1-dependencies-
      - run:
          name: install dependencies
          command: |
            gem  install  bundler  -v  2.0.2
            bundle install --jobs=4 --retry=3 --path vendor/bundle
      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}
      - run: mv config/database.yml.ci config/database.yml 
      - run: bundle exec rake db:create
      - run: bundle exec rake db:schema:load
      - run:
          name: Rubocop
          command: bundle exec rubocop
      - run:
          name: Ec2
          command: |
            touch .env
            echo SSH_PORT=$SSH_PORT > .env
            echo SSH_USER=$SSH_USER > .env
            echo SSH_HOST=$SSH_HOST > .env
      - run:
          name: yarn Install
          command: yarn install
      - run: bundle exec bin/webpack
      - run:
          name: run tests
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | \
              circleci tests split --split-by=timings)"
            bundle  exec  rspec \
              --format  progress  \
              --format  RspecJunitFormatter \
              --out /tmp/test-results/rspec.xml \
              --format  progress  \
              $TEST_FILES
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results

  deploy:
    machine:
      enabled: true
    steps:
      - add_ssh_keys:
          fingerprints:
            - 22:17:f8:88:0a:08:a8:51:6b:68:15:78:b8:f8:40:61
      - run: ssh -p $SSH_PORT $SSH_USER@$SSH_HOST "/my_webapp/deploy-me.sh"
            no_output_timeout: 50m
workflows:
  version: 2
  deploy:
    jobs:
      - deploy:
          filters:
            branches:
              only: master